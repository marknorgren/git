name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Git LFS (Windows)
        if: runner.os == 'Windows'
        run: |
          $ProgressPreference = 'SilentlyContinue'
          $env:GIT_LFS_VERSION = "3.4.0"
          $url = "https://github.com/git-lfs/git-lfs/releases/download/v${env:GIT_LFS_VERSION}/git-lfs-windows-amd64-v${env:GIT_LFS_VERSION}.zip"
          Invoke-WebRequest -Uri $url -OutFile git-lfs.zip
          Expand-Archive git-lfs.zip -DestinationPath git-lfs
          $env:PATH += ";$pwd\git-lfs"
          git-lfs.exe install
        shell: pwsh

      - name: Install Git LFS (Unix)
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y git-lfs
          else
            brew install git-lfs
          fi
          git lfs install
        shell: bash

      - name: Install dependencies
        working-directory: git-binary-lfs-hook/tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: git-binary-lfs-hook/tests
        run: |
          pytest pre-commit-tests.py -v --junitxml=test-results.xml
        shell: bash

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: git-binary-lfs-hook/tests/test-results.xml

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: git-binary-lfs-hook/tests
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Format code
        if: github.event_name == 'pull_request'
        working-directory: git-binary-lfs-hook/tests
        run: |
          black .
          isort .

      - name: Commit formatting changes
        if: github.event_name == 'pull_request'
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add .
            git commit -m "Apply automatic formatting"
            git push
          fi

      - name: Run linters
        working-directory: git-binary-lfs-hook/tests
        run: |
          flake8 .
          black --check .
          isort --check-only .
